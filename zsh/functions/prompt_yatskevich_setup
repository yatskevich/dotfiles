# yatskevich prompt theme

autoload âˆ’Uz vcs_info

prompt_yatskevich_help () {
  cat <<'EOF'

  Based on adam1 theme.  
	
EOF
}

prompt_yatskevich_setup () {
  py_color1=${1:-'blue'}
  py_color2=${2:-'cyan'}
  py_color3=${3:-'green'}
  py_color4=${4:-'magenta'}

  # vcs_info from zshcontrib
  # %s - The vcs in use.
  # %b - Information about the current branch.
  # %a - An identifier, that describes the action. Only makes sense in actionformats.

  zstyle ':vcs_info:*' actionformats '%F{$py_color4}(%s)%f-%F{$py_color2}[%b%u%c|%a%]%f '
  zstyle ':vcs_info:*' formats '%F{$py_color4}(%s)-%F{$py_color2}[%b%u%c]%f '
  zstyle ':vcs_info:git:*' check-for-changes true
  zstyle ':vcs_info:git:*' stagedstr '!'
  zstyle ':vcs_info:git:*' unstagedstr '*'

  add-zsh-hook precmd prompt_yatskevich_precmd
}

prompt_yatskevich_precmd () {
  setopt noxtrace localoptions
  local base_prompt_expanded_no_color base_prompt_etc
  local prompt_length space_left

  vcs_info
  base_prompt="%K{$py_color1}%n@%m%k ${vcs_info_msg_0_}" 
  post_prompt="%b%f%k"

  base_prompt_no_color=$(echo "$base_prompt" | perl -pe "s/%(K{.*?}|k)//g")
  post_prompt_no_color=$(echo "$post_prompt" | perl -pe "s/%(K{.*?}|k)//g")

  base_prompt_expanded_no_color=$(print -P "$base_prompt_no_color")
  base_prompt_etc=$(print -P "$base_prompt%(4~|...|)%3~")
  prompt_length=${#base_prompt_etc}
  if [[ $prompt_length -lt 40 ]]; then
    path_prompt="%B%F{$py_color2}%(4~|...|)%3~%F{white}"
  else
    space_left=$(( $COLUMNS - $#base_prompt_expanded_no_color - 2 ))
    path_prompt="%B%F{$py_color$py_color4}%${space_left}<...<%~$prompt_newline%F{white}"
  fi
  PS1="$base_prompt$path_prompt %# $post_prompt"
  PS2="$base_prompt$path_prompt %_> $post_prompt"
  PS3="$base_prompt$path_prompt ?# $post_prompt"
}

prompt_yatskevich_setup "$@"
